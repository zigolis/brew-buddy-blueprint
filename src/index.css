@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 35 30% 98%;
    --foreground: 25 10% 20%;

    --card: 0 0% 100%;
    --card-foreground: 25 10% 20%;

    --popover: 0 0% 100%;
    --popover-foreground: 25 10% 20%;

    --primary: 36 68% 54%;
    --primary-foreground: 0 0% 100%;

    --secondary: 30 35% 58%;
    --secondary-foreground: 0 0% 100%;

    --muted: 40 33% 94%;
    --muted-foreground: 25 5% 45%;

    --accent: 25 30% 94%;
    --accent-foreground: 24 9.8% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 30 10% 85%;
    --input: 30 10% 85%;
    --ring: 36 68% 54%;

    --radius: 0.75rem;
  }

  .dark {
    --background: 25 30% 10%;
    --foreground: 40 33% 98%;
    --card: 25 30% 12%;
    --card-foreground: 40 33% 98%;
    --popover: 25 30% 12%;
    --popover-foreground: 40 33% 98%;
    --primary: 36 68% 54%;
    --primary-foreground: 0 0% 100%;
    --secondary: 30 35% 40%;
    --secondary-foreground: 0 0% 100%;
    --muted: 25 30% 20%;
    --muted-foreground: 40 33% 80%;
    --accent: 25 30% 20%;
    --accent-foreground: 40 33% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 25 30% 20%;
    --input: 25 30% 20%;
    --ring: 36 68% 54%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
  }
}

.card-hover {
  @apply transition-all duration-200 hover:shadow-lg hover:-translate-y-1;
}

/* Fixed the circular dependency by directly using animation properties instead of @apply */
.fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
